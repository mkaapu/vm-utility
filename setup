#!/usr/bin/env bash
#
# VM-utility installation
#
# Check usage below.

set -e

#######################################
# DEFAULT VALUES
#######################################

VMU_HOME=$(dirname $(realpath $BASH_SOURCE))
BIN_DIR="/usr/local/bin"
INTERACTIVE=

#######################################
# FUNCTIONS
#######################################

usage() {
  echo "VM-utility installation"
  echo
  echo "Usage: setup [options] [directory]"
  echo
  echo "Create links to vm-utility tools in a destination directory."
  echo "If no arguments are given the tools are made available for all"
  echo "users by linking them to the /usr/local/bin directory."
  echo
  echo "Examples:"
  echo
  echo "  sudo ./setup"
  echo "    Do a default global install."
  echo
  echo "  ./setup ~/bin"
  echo "    Install the VM-utility tools in your own ~/bin/ directory."
  echo
  echo "Options:"
  echo "  -h, --help            Displays help on commandline options."
  echo "  -i, --interactive     Prompts whether to remove destinations"
  echo "                        when linking the executables."
  echo
  echo "Arguments:"
  echo "  directory             The path where executable utility tools"
  echo "                        are linked so that they can be easily"
  echo "                        added to the PATH."
  echo "                        Default: /usr/local/bin"
}

#######################################
# EXECUTION
#######################################

#######################################
# Handling command line arguments
#######################################
if ! OPTS="$(getopt \
  --longoptions help,interactive \
  --options hi \
  --name "$(basename "$0")" \
  -- "$@"
)"; then
  usage
  exit 1
fi
eval set -- "$OPTS"
while true; do
  case "$1" in
    --help|-h)
      usage;
      exit
      ;;
    --interactive|-i)
      INTERACTIVE="-i"
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      echo "DEBUG: No implementation for the option $1"
      exit 1
      ;;
  esac
done
ARGS=("$@")
ARGCOUNT=${#ARGS[@]}
if [ "$ARGCOUNT" -eq "1" ]; then
  BIN_DIR="${ARGS[0]}"
elif [ "$ARGCOUNT" -gt "1" ]; then
  echo "Too many arguments supplied."
  usage
  exit 1
fi

#######################################
# Main Execution
#######################################

echo "Linking executables to $BIN_DIR .."
mkdir -p $BIN_DIR
ln -fsv $INTERACTIVE -t $BIN_DIR \
  $VMU_HOME/vmu-config \
  $VMU_HOME/vmu-calls \
  $VMU_HOME/git/git-calls \
  $VMU_HOME/network/net-calls \
  $VMU_HOME/multipass/mp-calls \
  $VMU_HOME/multipass/mp-ssh \
  $VMU_HOME/multipass/mp-launch \
  $VMU_HOME/multipass/mp-route \
  $VMU_HOME/multipass/mp-delete \
  $VMU_HOME/jenkins/vm-agent/launch-vm-agent \
  $VMU_HOME/jenkins/vm-controller/launch-vm-jenkins \
  $VMU_HOME/ssh/make-ssh-tunnel \
  $VMU_HOME/ssh/rm-ssh-tunnel \
  $VMU_HOME/installers/multipass/setup-multipass \
  $VMU_HOME/installers/docker/setup-docker \
  $VMU_HOME/installers/jenkins/dind/run-dind \
  $VMU_HOME/installers/jenkins/dind/run-jenkins \
  $VMU_HOME/development/config-nano \
  $VMU_HOME/development/config-git \
  $VMU_HOME/development/dev-setup \
  $VMU_HOME/development/dev-checkout \
  $VMU_HOME/development/dev-vmu \
  $VMU_HOME/development/dev-vm \
  $VMU_HOME/development/mp-purge
echo "vm-utility installed."
