#!/usr/bin/env bash
#
# Tests vm-utility tools
#
# Run this test from the root of the repository:
# $ test/test-vm-agent

set -e

HOST_VM="test-vm-agent"
GUEST_VM="vm-agent"
format="--format=%(upstream:short)"
REMOTE=$(git for-each-ref $format "$(git symbolic-ref -q HEAD)")
TEST_NAME=$(basename $BASH_SOURCE)

echo "Setting up the test environment.."
rm -frv test.tmp/$TEST_NAME
echo "Copying vm-utility tools to test.tmp/$TEST_NAME .."
./setup test.tmp/$TEST_NAME
export PATH="$test.tmp/$TEST_NAME:$PATH"
. mp-calls

echo "Cleaning the test environment.."
ssh-keygen -R "[10.10.10.10]:2222"
host_found=$(mp-info-ip $HOST_VM)
if [ $host_found ]; then
  echo "$HOST_VM found."
  multipass exec $HOST_VM -- bash -c '
    . mp-calls
    guest_found=$(mp-info-ip $0)
    if [ $guest_found ]; then
      echo "$0 found."
      purge-vm $0
      echo "$0 purged."
    else
      echo "$0 not found."
    fi
  ' $GUEST_VM
  purge-vm $HOST_VM
  echo "$HOST_VM purged."
else
  echo "$HOST_VM not found."
fi
echo "Test environment clean."

echo
echo "1. Testing the dev-vm tool."
echo "Creating a test host VM:$HOST_VM with the IP:10.10.10.10 .."
DEV_VM=( "dev-vm"  )
DEV_VM+=( "-n \"John Doe\"" )
DEV_VM+=( "-a johndoe@example.com" )
DEV_VM+=( "-i 10.10.10.10" )
if [ $REMOTE ] && [ "$REMOTE" != "origin/main" ]; then
  DEV_VM+=( "-t $REMOTE" )
fi
DEV_VM+=( "$HOST_VM" )
eval "${DEV_VM[@]}"
echo "1. VM:$HOST_VM creation: SUCCESS!"

echo
echo "2. Testing the launch-vm-agent tool."
echo "Creating a guest VM:$GUEST_VM in the VM:$HOST_VM with the tool .."
EXEC_ARGS+=( "$GUEST_VM" )
EXEC_ARGS+=( "$REMOTE" )
EXEC_ARGS+=( "$(cat ~/.ssh/id_ed25519.pub)" )
multipass exec $HOST_VM -- bash -c '

  GUEST_VM=$0
  REMOTE=$1
  KEY="$2"
  set -e
  launch-vm-agent \
    --name $GUEST_VM \
    --cpus 2 \
    --mem 2G \
    --disk 10G \
    --host-ip 10.10.10.10 \
    --vm-ip 10.10.20.10
  echo "2. VM:$GUEST_VM creation: SUCCESS!"

  echo
  echo "3. Testing the setup-docker script"
  echo "Install Docker inside the VM:$GUEST_VM using the script"
  multipass exec $GUEST_VM -- bash -c "
    set -e
    mkdir -p workspace
    cd workspace
    git clone https://github.com/mkaapu/vm-utility.git
    cd vm-utility
    if [ "$REMOTE" ] && [ "$REMOTE" != "origin/main" ]; then
      git checkout -t $REMOTE
    fi
    installers/docker/setup-docker
  " $REMOTE

  multipass exec $GUEST_VM -- docker run hello-world
  echo "Docker commands can run without sudo on the VM:$GUEST_VM"
  echo "3. VM:$GUEST_VM Docker setup: SUCCESS!"

  multipass exec $GUEST_VM -- bash -c "
    echo $KEY >> ~/.ssh/authorized_keys
  " $KEY
  echo
  echo "Public key of the current user authorized on the VM:$GUEST_VM"

' "${EXEC_ARGS[@]}"

echo
echo "Adding a known host key of the VM:$GUEST_VM to the current user.."
ssh-keyscan \
  -H \
  -t ed25519 \
  -T 30 \
  -p 2222 \
  10.10.10.10 >> ~/.ssh/known_hosts

echo
echo "You should be able to connect to the VM:$HOST_VM:"
echo "$ ssh ubuntu@10.10.10.10"
echo
echo "You should be able to connect to the VM:$GUEST_VM:"
echo "$ ssh -p 2222 ubuntu@10.10.10.10"
